# -*- coding: utf-8 -*-
"""Ejercicios.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11iiBq_EZYG9xHbel3DSNRcYMlCobYCUp
"""


#Ejercicio #2 - Encontrar número en lista de números:

def BuscarLista(num, lista):
  valor = "No encontrado"
  indice = -1
  for count, x in enumerate(lista):
    if x == num:
       valor = "Encontrado"
       indice = count
       break;

  if indice == -1:
    print(f"El número introducido no fue Encontrado en la lista")
  else :
    print(f"El número fue Encontrado en la lista")

  return indice;

def ValidarEntero(tipo):
   while True:
       if (tipo == "lista"):
          entrada = input("Escribe un numero entero para la lista: ")
       elif (tipo == "tamanio"):
          entrada = input("Ingrese el tamaño de la lista: ")
       else:
          entrada = input("Ingrese el valor númerico a buscar: ")
       try:
           entrada = int(entrada)
           return entrada
       except ValueError:
           print ("La entrada es incorrecta: escriba un numero entero.");

lista = []

tamanio = int(ValidarEntero("tamanio"))

for i in range(0, tamanio):
  elemento = int(ValidarEntero("lista"))
  lista.append(elemento)

num = int(ValidarEntero("num"))

indice =  BuscarLista(num, lista)

if(indice != -1):
  print (f"El número introducido: '{num}' se encuentra en la posición: '{indice+1}' de la lista.");

#Ejercicio #3 - Ordenar lista de valores númericos:

def ordenarLista(lista):
  for i in range(0, len(lista)):
    for j in range(i+1, len(lista)):
      if lista[i] >= lista[j]:
        temp = lista[i]
        lista[i] = lista[j]
        lista[j] = temp
  print("Lista Ordenada: ", lista)
  return;

def ValidarEntero(tipo):
   while True:
       if (tipo == "lista"):
          entrada = input("Escribe un numero entero para la lista: ")
       elif (tipo == "tamanio"):
          entrada = input("Ingrese el tamaño de la lista: ")
       else:
          entrada = input("Ingrese el valor númerico a buscar: ")
       try:
           entrada = int(entrada)
           return entrada
       except ValueError:
           print ("La entrada es incorrecta: escriba un numero entero.");

lista = []

tamanio = int(ValidarEntero("tamanio"))

for i in range(0, tamanio):
  elemento = int(ValidarEntero("lista"))
  lista.append(elemento)

ordenarLista(lista);

#Ejercicio #4 - Algoritmo de la Mochila:

def ValidarEntero():
   while True:
       entrada = input("Ingrese el tamaño de la lista de Pesos de Items: ")
       try:
           entrada = int(entrada)
           return entrada
       except ValueError:
           print ("La entrada es incorrecta: escriba un numero entero.");

def ValidarNumero(tipo):
   while True:
       if (tipo == "lista"):
          entrada = input("Ingrese el peso del Item para la lista: ")
       else:
          entrada = input("Ingrese la capacidad de Peso para la Mochila: ")
       try:
           entrada = float(entrada)
           return entrada
       except ValueError:
           print ("La entrada es incorrecta: escriba un numero entero.");


def Algoritmo_mochila(C, items):
    n = len(items)
    dp = [0.0] * (int(C) + 1)
    eleccion = [-1] * (int(C) + 1)
    for capacidad in range(1, int(C) + 1):
        max_valor = dp[capacidad]
        eleccion_actual = -1

        for i in range(n):
            peso = items[i]
            valor = items[i]
            if peso <= capacidad:
                nuevo_valor = dp[int(capacidad - peso)] + valor
                if nuevo_valor > max_valor:
                    max_valor = nuevo_valor
                    eleccion_actual = i

        dp[int(capacidad)] = max_valor
        eleccion[int(capacidad)] = eleccion_actual
    
    # Obtener Items
    seleccionados = []
    capacidad_actual = C
    cont = 0
    while capacidad_actual > 0: #and eleccion[int(capacidad_actual)] != -1
        idx_item = eleccion[int(capacidad_actual)]
        seleccionados.append(items[idx_item])
        capacidad_actual -= items[idx_item]

    return seleccionados

items = []

C = float(ValidarNumero("capacidad"))

tamanio = int(ValidarEntero())

for i in range(0, tamanio):
  elemento = float(ValidarNumero("lista"))
  items.append(elemento)


resultado = Algoritmo_mochila(C, items)
print("Ítems seleccionados para llenar la bolsa:")
print(resultado)
